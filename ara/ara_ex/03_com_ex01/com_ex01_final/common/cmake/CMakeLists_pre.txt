#  --------------------------------------------------------------------------
#  |              _    _ _______     .----.      _____         _____        |
#  |         /\  | |  | |__   __|  .  ____ .    / ____|  /\   |  __ \       |
#  |        /  \ | |  | |  | |    .  / __ \ .  | (___   /  \  | |__) |      |
#  |       / /\ \| |  | |  | |   .  / / / / v   \___ \ / /\ \ |  _  /       |
#  |      / /__\ \ |__| |  | |   . / /_/ /  .   ____) / /__\ \| | \ \       |
#  |     /________\____/   |_|   ^ \____/  .   |_____/________\_|  \_\      |
#  |                              . _ _  .                                  |
#  --------------------------------------------------------------------------
#
#  All Rights Reserved.
#  Any use of this source code is subject to a license agreement with the
#  AUTOSAR development cooperation.
#  More information is available at www.autosar.org.
#
#  Disclaimer
#
#  This work (specification and/or software implementation) and the material
#  contained in it, as released by AUTOSAR, is for the purpose of information
#  only. AUTOSAR and the companies that have contributed to it shall not be
#  liable for any use of the work.
#
#  The material contained in this work is protected by copyright and other
#  types of intellectual property rights. The commercial exploitation of the
#  material contained in this work requires a license to such intellectual
#  property rights.
#
#  This work may be utilized or reproduced without any modification, in any
#  form or by any means, for informational purposes only. For any other
#  purpose, no part of the work may be utilized or reproduced, in any form
#  or by any means, without permission in writing from the publisher.
#
#  The work has been developed for automotive applications only. It has
#  neither been developed, nor tested for non-automotive applications.
#
#  The word AUTOSAR and the AUTOSAR logo are registered trademarks.
#  --------------------------------------------------------------------------

#set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/../common/cmake)
set(CMAKE_VERBOSE_MAKEFILE on)

# generator
find_package(ara_gen REQUIRED)
# ara::com API
find_package(ara_com REQUIRED)
find_package(ara_logging REQUIRED)
find_library(DLT_LIB dlt REQUIRED)
find_package(ara_exec REQUIRED)

if(${CMAKE_SYSTEM_NAME} MATCHES "VxWorks")
set(ARA_LIBRARIES ara_exec ara_com ara_com_localbinding ara_localipc ara_logging dlt ${MGA_LIB_JSON} net)
elseif (${CMAKE_SYSTEM_NAME} MATCHES "QNX")
set(ARA_LIBRARIES ara_exec ara_exec_pipe ara_com ara_com_localbinding ara_localipc ara_logging dlt ${MGA_LIB_JSON})
else()
set(ARA_LIBRARIES ara_exec ara_com ara_com_localbinding ara_localipc ara_logging dlt ${MGA_LIB_JSON} ara_exec_pipe)
#set(ARA_LIBRARIES ara_exec ara_com ara_logging dlt ${MGA_LIB_JSON})
endif()

# Thread is not in pkgconfig yet, always use exported targets
find_package(Threads REQUIRED)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread -Wall -D_GLIBCXX_USE_NANOSLEEP -DLINUX -DHAS_LOCAL_BINDING" )

if(DEFINED ARAGEN_SCHEMA AND DEFINED AR_SCHEMA_VERSION)
    if(${AR_SCHEMA_VERSION} GREATER 0)
        set(SCHEMA ${ARAGEN_SCHEMA}/AUTOSAR_${AR_SCHEMA_VERSION}-AP.xsd)
    endif(${AR_SCHEMA_VERSION} GREATER 0)
endif(DEFINED ARAGEN_SCHEMA AND DEFINED AR_SCHEMA_VERSION)
