/*******************************************************************************
**  FILE-NAME: MemIf.h                                                        **
**                                                                            **
**  MODULE-NAME: AUTOSAR Memory Abstraction Interface Module                  **
**                                                                            **
**  NOTE: This file is auto generated, do not edit this file manually.        **
**                                                                            **
********************************************************************************

********************************************************************************
**                      Generation Tool Information                           **
********************************************************************************
**  Tool Version: 1.3.4                                                       **
**                                                                            **
**  Change History: Refer log file (use -l option to generate log file)       **
**                                                                            **
********************************************************************************
**                      File Generation Information                           **
*******************************************************************************/

/*
 * INPUT FILE:    Configuration\ECU\Ecud_MemIf.arxml
 *                Configuration\ECU\Mcal\Ecud_Fee.arxml
 *                Configuration\ECU\Mcal\Ecud_Fls.arxml
 *                Configuration\ECU\Ecud_NvM.arxml
 * GENERATED ON:  This timestamp is removed.
 */

#ifndef MEMIF_H
#define MEMIF_H

/*******************************************************************************
**                      Include Section                                       **
*******************************************************************************/
#include "Std_Types.h"
#include "MemIf_Cfg.h"
#include "Fee.h"


/*******************************************************************************
**                      Global symbols                                        **
*******************************************************************************/
/* Macro for Instance Id to be used as one of the return values on call of
  "Det_GetVersionInfo".*/
#define MEMIF_INSTANCE_ID                 0x00
#define MEMIF_MAX_CONFIGURED_EA_DEVICES       0x00

#define MEMIF_MAX_CONFIGURED_FEE_DEVICES       0x01

#define MEMIF_ZERO             0x00
#define MEMIF_BROADCAST_ID     ((uint8)0xFF)
#define MEMIF_TRUE             0x01
#define MEMIF_FALSE            0x00
/*******************************************************************************
**                        Service IDs                                         **
*******************************************************************************/

/* Service ID for Read  */
#define MEMIF_READ_SID                      0x02
/* Service ID for Write  */
#define MEMIF_WRITE_SID                     0x03
/* Service ID for Cancel  */
#define MEMIF_CANCEL_SID                    0x04
/* Service ID for Get Status  */
#define MEMIF_GETSTATUS_SID                 0x05
/* Service ID for Get Job Result  */
#define MEMIF_GETJOBRESULT_SID              0x06
/* Service ID for Invalidate Block */
#define MEMIF_INVALIDATEBLOCK_SID           0x07
/* Service ID for  Erase Immediate Block */
#define MEMIF_ERASEIMMEDIATEBLOCK_SID       0x09
/* Service ID for Get Version Info  */
#define MEMIF_GETVERSIONINFO_SID            0x08

/*******************************************************************************
**                      DET Error Codes                                       **
*******************************************************************************/
/* DET code for invalid device number */
#define MEMIF_E_PARAM_DEVICE       0x01
/* DET code for invalid pointer for GetVersionInfo */
#define MEMIF_E_PARAM_POINTER      0x02

/*******************************************************************************
**                      Function Prototypes                                   **
*******************************************************************************/
#define MEMIF_START_SEC_CODE
#include "MemMap.h"
extern FUNC(void, MEMIF_CODE) MemIf_SetMode(MemIf_ModeType Mode);
#define MEMIF_STOP_SEC_CODE
#include "MemMap.h"

#define MEMIF_START_SEC_CODE
#include "MemMap.h"
extern FUNC(MemIf_StatusType, MEMIF_CODE) MemIf_GetStatus(uint8
  DeviceIndex);
#define MEMIF_STOP_SEC_CODE
#include "MemMap.h"

#define MEMIF_START_SEC_CODE
#include "MemMap.h"
extern FUNC(Std_ReturnType, MEMIF_CODE) MemIf_Read(uint8 DeviceIndex,
  uint16 BlockNumber, uint16 BlockOffset,
  P2VAR(uint8, AUTOMATIC, MEMIF_APPL_DATA)DataBufferPtr, uint16 Length);
#define MEMIF_STOP_SEC_CODE
#include "MemMap.h"

#define MEMIF_START_SEC_CODE
#include "MemMap.h"
extern FUNC(Std_ReturnType, MEMIF_CODE) MemIf_Write(uint8 DeviceIndex,
  uint16 BlockNumber, P2VAR(uint8, AUTOMATIC, MEMIF_APPL_DATA)DataBufferPtr);
#define MEMIF_STOP_SEC_CODE
#include "MemMap.h"

#define MEMIF_START_SEC_CODE
#include "MemMap.h"
extern FUNC(void, MEMIF_CODE) MemIf_Cancel(uint8 DeviceIndex);
#define MEMIF_STOP_SEC_CODE
#include "MemMap.h"

#define MEMIF_START_SEC_CODE
#include "MemMap.h"
extern FUNC(MemIf_JobResultType, MEMIF_CODE) MemIf_GetJobResult(uint8
  DeviceIndex);
#define MEMIF_STOP_SEC_CODE
#include "MemMap.h"

#define MEMIF_START_SEC_CODE
#include "MemMap.h"
extern FUNC(Std_ReturnType, MEMIF_CODE) MemIf_InvalidateBlock(uint8
  DeviceIndex, uint16 BlockNumber);
#define MEMIF_STOP_SEC_CODE
#include "MemMap.h"

#define MEMIF_START_SEC_CODE
#include "MemMap.h"
extern FUNC(Std_ReturnType, MEMIF_CODE) MemIf_EraseImmediateBlock(uint8
  DeviceIndex, uint16 BlockNumber);
#define MEMIF_STOP_SEC_CODE
#include "MemMap.h"

#define MEMIF_START_SEC_CODE
#include "MemMap.h"
/* Function for MEMIF getting Version Information API */
extern FUNC(void, MEMIF_CODE) MemIf_GetVersionInfo
  (P2VAR(Std_VersionInfoType, AUTOMATIC, MEMIF_APPL_DATA)VersionInfoPtr);
#define MEMIF_STOP_SEC_CODE
#include "MemMap.h"

#endif /* MEMIF_H */

/*******************************************************************************
**                      End of File                                           **
*******************************************************************************/
