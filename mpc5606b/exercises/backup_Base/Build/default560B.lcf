/*
 *######################################################################
 *                                RAppIDJDP
 *           Rapid Application Initialization and Documentation Tool
 *                         Freescale Semiconductor Inc.
 *
 *######################################################################
 *
 * Project Name           : baseconfigMPC5606B
 *
 * Project File           : baseconfigMPC5606B.rsp
 *
 * Revision Number        : 1.0
 *
 * Tool Version           : 1.2.1.5
 *
 * file                   : default560B.lcf
 *
 * Target Compiler        : Codewarrior
 *
 * Target Part            : MPC5606B
 *
 * Part Errata Fixes      : none
 *
 * Project Last Save Date : 04-Apr-2016 16:32:09
 *
 * Created on Date        : 04-Apr-2016 16:34:19
 *
 * Brief Description      : 
 *
 ******************************************************************************** 
 *
 * Detail Description     : 
 *
 ******************************************************************************** 
 *
 *######################################################################
*/

 
 
MEMORY
{
    rcw:                            org=0x00000000, len=0x00000008
    init:                           org=0x00000020, len=0x00000FE0
    exception_handlers:             org=0x00001000, len=0x00001000
    vector_table:                   org=0x00002000, len=0x00001000
    int_flash:                      org=0x00003000, len=0x000F7000
    int_sram:                       org=0x40000000, len=0x00012000
    stack_ram:                      org=0x40012000, len=0x00002000
}

FORCEACTIVE { "bam_rchw" "bam_resetvector" }

SECTIONS
{





    GROUP : { 
    
        .__bam_bootarea  LOAD (0x0): {   }} >rcw



    GROUP : { 
    
        .init : {  }
        .init_vle (VLECODE) LOAD (0x20): { 
            *(.init)
            *(.init_vle)
          }} >init



    GROUP : { 
    
        .exec_vect  LOAD (0x1000): {   }
        .exec_vect_Vle (VLECODE) LOAD (0x1000): {   }} >exception_handlers



    GROUP : { 
        .vects (VLECODE) LOAD (0x2000): { *(.vects)} } >vector_table

    GROUP : { 
    
        __argv=.;

        __env=.;

        .text : {  }
        .text_vle (VLECODE): { 
            *(.text_vle)
            *(.text)
            *(.appcode)
            *(.ramcode) /*나중에 ram영역으로 옮겨야 함*/
            *(.oshook)
            *(.ostext)
         }
        .rodata (CONST): { 
            *(.rdata)
            *(.rodata)
            *(.osrodata)
         }
        .ctors  ALIGN (0x4): { *(.ctors) }
        .dtors  ALIGN (0x4): { *(.dtors) }
        .sdata2 : {  }
        .sbss2 : {  }} >int_flash



    GROUP : { 

        __DATA_ROM =((ADDR(.sbss2) + SIZEOF(.sbss2)) + 0x7) & ~0x7;

        __DATA_RAM=.;

        .data : { *(.data) }
        .j_pdata : { *(.j_pdata) }
        .sdata : { *(.sdata) }
        __DATA_END=.;

        __BSS_START=.;

        .sbss : { 
        *(.sbss) 
        }
         .ossbss : {
         *(.ossbss)
        }  
        .bss : {
            *(.bss)
            *(.osbss) 
           }
        .tibss : {  }
        __BSS_END=.;

        .tidata : {  }
        __HEAP_START =.;
} >int_sram

}





__SP_INIT=ADDR(stack_ram)+SIZEOF(stack_ram);
__SP_END=ADDR(stack_ram);
__HEAP_END=__SP_END;
___HEAP_START=__HEAP_START;
___HEAP_END=__HEAP_END;
___SP_INIT=__SP_INIT;
___SP_END=__SP_END;
___DATA_ROM=__DATA_ROM;
___DATA_RAM=__DATA_RAM;
___DATA_END=__DATA_END;
___BSS_START=__BSS_START;
___BSS_END=__BSS_END;
OS_MAIN_TOS=__SP_INIT;
OS_MAIN_BOS=__SP_END;
