<?xml version='1.0'?>
<datamodel version="3.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/08/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/08/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">
<!--
*   @file    Gpt.xdm
*   @version 1.0.1
*
*   @brief   AUTOSAR Gpt - Tresos Studio plugin schema file
*   @details This file contains the schema configuration for and Gpt Tresos Studio plugin.
-->
<!--
====================================================================================================
*   Project              : AUTOSAR 4.0 MCAL
*   Platform             : PA
*   Peripheral           : eMIOS_Stm_Pit_Rtc
*   Dependencies         : none
*
*   Autosar Version      : 4.0.3
*   Autosar Revision     : ASR_REL_4_0_REV_0003
*   Autosar Conf.Variant :
*   SW Version           : 1.0.1
*   Build Version        : MPC560xB_MCAL_1_0_1_RTM_ASR_REL_4_0_REV_0003_20140606
*
*   (c) Copyright 2006-2014 Freescale Semiconductor Inc and STMicroelectronics
*   All Rights Reserved.
====================================================================================================
====================================================================================================
====================================================================================================
-->    
  <d:ctr type="AUTOSAR" factory="autosar"  
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd" >
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_T2D13M10I1R0" type="AR-PACKAGE">
        <a:a name="UUID" value="ECUC:00f42a5c-b991-40cd-af74-726dcd1d661d"/>
        <d:lst type="ELEMENTS">
          <d:chc name="Gpt" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="RELEASE" value="asc:4.0"/>
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                  <ad:ADMIN-DATA>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.1.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2010-12-03</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                  </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC" 
                   value="EN: Configuration of the Gpt (General Purpose Timer) module."/>
              <a:a name="UUID" value="ECUC:9b0aeaa8-ae94-4f12-b52c-d7ea263ac224"/>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="LABEL" value="Config Variant"/>
                <a:a name="UUID" value="ECUC:eccc7393-77e5-44ee-84bc-765036c03412"/>
                <a:da name="DEFAULT" value="VariantPostBuild"/>
                <a:da name="RANGE">
                  <a:v>VariantPostBuild</a:v>
                  <a:v>VariantPreCompile</a:v>
                </a:da>
                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                </a:a>
              </v:var>
              <v:lst name="GptChannelConfigSet" 
                     type="MULTIPLE-CONFIGURATION-CONTAINER">
                <a:da name="MIN" value="1"/>
                <a:da name="INVALID" type="XPath">
                  <a:tst expr="(num:i(num:i(count(../GptChannelConfigSet/*))) > 1) and (../IMPLEMENTATION_CONFIG_VARIANT = 'VariantPreCompile')" 
                  true =" For Variant PreCompile, only 1 ' GptChannelConfigSet ' should exist."/>
                </a:da>

                <!-- @implements DGPT01003 -->
                <v:ctr name="GptChannelConfigSet" 
                       type="MULTIPLE-CONFIGURATION-CONTAINER">
                  <a:a name="DESC" 
                       value="EN: This container is the base of an Configuration Set which contains the configured GPT channels. This way, different configuration sets can be defined for post-build process."/>
                  <a:a name="UUID" value="ECUC:3254479e-bb18-48ff-bc45-54ecd2926364"/>

                  <!-- @implements DGPT01026 -->
                  <v:var name="GptSTMChannelPrescale_Alternate" type="INTEGER">
                    <a:da name="TOOLTIP" value="Select desired prescaler for STM channel"/>
                    <a:a name="DESC"><a:v><![CDATA[EN:
                      <html>
                      This is a non AutoSAR feature implementation.
                      Selects the clock divide value for the STM prescaler (1-256) in dual mode
                      <h1>Note</h1>This is an Implementation Specific Parameter. <br>It needs to be enabled only when there is at least one STM channel configured.<br>
                      </html>
                      ]]></a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      <icc:v class="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Freescale"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:95dfd4c0-4a03-4999-9e6b-df3c5939abe7"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=256"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                    <a:da name="EDITABLE" type="XPath">
                      <a:tst expr="(../../../GptNonAUTOSAR/GptEnableDualClockMode)" true ="true" false="false"/>
                    </a:da>
                    <a:a name="TAB" value="GptChannelConfiguration"/>
                  </v:var>
                  <v:lst name="GptChannelConfiguration" type="MAP">
                    <a:da name="MIN" value="1"/>

                    <!-- @implements DGPT01007 -->
                    <v:ctr name="GptChannelConfiguration" type="IDENTIFIABLE">
                      <a:a name="DESC" 
                           value="EN: This container contains the channel-wide configuration (parameters) of the GPT Driver"/>
                      <a:a name="UUID" value="ECUC:e5ea5c0a-a447-4c68-92d9-620778fba74a"/>

                      <!-- @implements DGPT01022 -->
                      <v:var name="GptChannelId" type="INTEGER">
                        <a:a name="DESC" 
                             value="EN: Channel Id of the GPT channel. This value will be assigned to the symbolic name derived of the GptChannelConfiguration container short name."/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                        <a:a name="UUID" value="ECUC:39e06792-0c24-4dad-82c8-8990985fb0dd"/>
                        <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index, '0')"/>
                        <a:da name="INVALID" type="Range">
                            <!-- Max allowed GptChannelId = (2^32)-1-->
                            <a:tst expr="&lt;=4294967295"/>
                            <a:tst expr="&gt;=0"/>
                        </a:da>
                        <a:da name="RANGE" type="XPath">
                            <a:tst expr="text:uniq(node:fallback(../../*/GptChannelId, text:split('1 2 3')), node:fallback(., 0))" false="Channel id is duplicated in this configuration"/>
                            <a:tst expr="node:fallback(., 0) &lt; count(node:fallback(../../*, text:split('1 2 3')))" false="It can't be assigned an id higher than the number of defined channels"/>
                        </a:da>
                      </v:var>

                      <!-- @implements DGPT01023 -->
                      <v:var name="GptHwChannel" type="ENUMERATION">
                        <a:a name="DESC"><a:v><![CDATA[EN:
                          <html>
                          Selects the physical GPT Channel.
                          <h1>Note</h1>This is an Implementation Specific Parameter.<br>
                          </html>
                          ]]></a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="Freescale"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:4b3f9c38-3eff-4e8f-bb9c-c75da50eed0d"/>                      
                        <!--<a:da name="DEFAULT" type="XPath" expr="ecu:list(&apos;Gpt.GptChannelConfigSet.GptChannelConfiguration.GptHwChannel&apos;)[position()-1=node:current()/../@index]"/> -->
                        <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Gpt.GptChannelConfigSet.GptChannelConfiguration.GptHwChannel'))[position()-1=node:fallback(node:current()/../@index, '0')]">
                        </a:da>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="text:uniq(../../*/GptHwChannel, .)" false="Duplicate physical GPT channel"/>
                        </a:da>
                        <!-- <a:da name="RANGE" type="XPath" expr="ecu:list(&apos;Gpt.GptChannelConfigSet.GptChannelConfiguration.GptHwChannel&apos;)"/> -->
                        <a:da name="RANGE" type="XPath" expr="ecu:list('Gpt.GptChannelConfigSet.GptChannelConfiguration.GptHwChannel')"/>
                      </v:var>

                      <!-- @implements DGPT01010 -->
                      <v:var name="GptChannelMode" type="ENUMERATION">
                        <a:da name="TOOLTIP" value="Select desired channel mode"/>
                        <a:a name="DESC" 
                             value="EN: Specifies the behaviour of the timerchannel after the timeout has expired"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:e9bc658e-9ac6-4076-a4de-4c5e6040078e"/>
                        <a:da name="DEFAULT" value="GPT_CH_MODE_ONESHOT"/>
                        <a:da name="RANGE">
                          <a:v>GPT_CH_MODE_CONTINUOUS</a:v>
                          <a:v>GPT_CH_MODE_ONESHOT</a:v>
                        </a:da>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="(. = 'GPT_CH_MODE_ONESHOT') and (contains(../GptHwChannel, 'EMIOS_') or contains(../GptHwChannel, 'RTC_')) and (not(node:exists(../GptNotification)) or ((../GptNotification) = 'NULL_PTR'))"
                                 true="It is mandatory to set a notification for the RTC and EMIOS channels used in ONESHOT mode. "/>
                        </a:da>      
                      </v:var>

                      <!-- @implements DGPT01014 -->
                      <v:var name="GptChannelTickFrequency" type="FLOAT">
                        <a:da name="TOOLTIP" value="The tick frequency of the channel in Hz"/>
                        <a:a name="DESC">
                          <a:v>EN: Specifies the tick frequency of the timer channel in Hz.
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:da name="ENABLE" type="XPath" expr="(contains(node:fallback(../GptHwChannel,'STM'),'STM') = true()) or (contains(node:fallback(../GptHwChannel,'EMIOS'),'EMIOS') = true()) or (contains(node:fallback(../GptHwChannel,'RTC'),'RTC') = true())"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:5dbd5e7f-bc27-4411-ac93-9024d6d6d383"/>
                        <a:da name="DEFAULT" value="1.0"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&gt; 0"/>
                          <a:tst expr="&lt;=128000000"/>
                        </a:da>      
                       </v:var>          

                      <!-- @implements DGPT01015 -->
                      <v:var name="GptChannelTickValueMax" type="INTEGER">
                        <a:da name="TOOLTIP" value="Maximum counter value in ticks "/>
                        <a:a name="DESC">
                          <a:v><![CDATA[EN:
                        <html> This parameter is not used by MCAL! 
                        </html> ]]>
                          </a:v>
                        </a:a>
                        <!--<a:da name="ENABLE" type="XPath" expr="contains(../GptHwChannel, 'EMIOS_' )"/>-->
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:da name="DEFAULT" value="65536"/>
                        <a:a name="INVALID" type="Multi">
                          <mt:range> <mt:tst expr="&lt;=4294967296"/> <mt:tst expr="&gt;=65536"/> </mt:range>
                          <mt:xpath expr="((. != '65536') and contains(../GptHwChannel, 'EMIOS_'))"
                                 true="The proper value for the eMIOS channels is 65536. "/>
                          <mt:xpath expr="((. != '4294967296') and (contains(../GptHwChannel, 'PIT_') or contains(../GptHwChannel, 'STM_')  or contains(../GptHwChannel, 'RTC_')))"
                                 true="The proper value for the PIT or STM or RTC channels is 4294967296. "/>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="ENABLE" value="false"/>
                        <a:a name="UUID" value="ECUC:bd967421-c3ae-4e02-83af-f9a27b71a668"/>
                      </v:var>

                      <v:var name="GptChannelClkSrc" type="INTEGER">
                        <a:da name="TOOLTIP" value="select the desired clock source for the RTC channel "/>
                        <a:a name="DESC">
                          <a:v><![CDATA[EN:
                        <html> GPT187: The GPT module specific clock input for the timer unit can statically be configured and allows to select different clock sources (external clock, internal GPT specific clock) per channel.<br>
                            select the clock source for the RTC channel. <br>
                            0 - 32 kHz OSC<br>
                            1 -128 kHz IRC<br>
                            2 -16 MHz IRC  <br>
                        </html> ]]>
                          </a:v>
                        </a:a>    
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=2"/>
                          <a:tst expr="&gt;=0"/>
                        </a:da>    
                        <a:a name="ORIGIN" value="Freescale"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:9b80400e-9669-4819-91cc-3af6514c29c8"/>
                      </v:var>

                      <!-- @implements DGPT01024 -->
                      <v:var name="GptChannelPrescale_Alternate" type="INTEGER">
                        <a:da name="TOOLTIP" value="Select desired prescaler for EMIOS channel"/>
                        <a:a name="DESC"><a:v><![CDATA[EN:
                        <html>
                          This is a non AuroSAR feature implementation.
                          GPT module specific prescaler factor per channel in dual mode.
                          Selects the clock divide value for the prescaler.<br>
                          This parameter is used ONLY for EMIOS channels. Use for the clock divider only the values 1, 2, 3 or 4.<br>
                        </html>
                        ]]></a:v></a:a>
                        <a:da name="ENABLE" type="XPath" expr="contains(node:fallback(../GptHwChannel,'EMIOS'),'EMIOS') = true()"/>
                        <a:da name="DEFAULT" value="1"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=4"/>
                          <a:tst expr="&gt;=1"/>
                        </a:da>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="Freescale"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:4b5f38f4-105c-4d8b-98ad-da59e72cfb18"/>
                        <a:da name="EDITABLE" type="XPath">
                          <a:tst expr="(../../../../../GptNonAUTOSAR/GptEnableDualClockMode)" true ="true" false="false"/>
                        </a:da>
                      </v:var>

                      <!-- @implements DGPT01032 -->
                      <v:var name="GptFreezeEnable" type="BOOLEAN">
                        <a:a name="DESC"><a:v><![CDATA[EN:
                        <html>
                          Select to set Freeze enable for the hw resources.
                          <h1>Note</h1>This is an Implementation Specific Parameter.<br>
                        </html>
                        ]]></a:v></a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="Freescale"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:9212339e-4034-4fcc-a0ee-da0a18e08bf4"/>
                        <a:da name="DEFAULT" value="true"/>
                      </v:var>

                      <!-- @implements DGPT01008 -->
                      <v:var name="GptEnableWakeup" type="BOOLEAN">
                        <a:da name="TOOLTIP" value="Check to enable wakeup feature"/>
                        <a:a name="DESC" 
                             value="EN: Enables wakeup capability of CPU for a channel."/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:508b3839-bfc5-43d8-8cab-c4f2dce29c02"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:da name="ENABLE" type="XPath" expr="contains(node:fallback(../GptHwChannel,'STM'),'STM') = false()"/>
                        <a:da name="INVALID" type="XPath">
                        <a:tst expr="(. = 'true') and (../../../../../GptConfigurationOfOptApiServices/GptWakeupFunctionalityApi = 'false')"
                                        true="The switch GptWakeupFunctionalityApi  is false,set it to true. "/>
                        <a:tst expr="(. = 'true' and not(node:exists(../GptWakeupConfiguration/GptWakeupSourceRef)))" true="Enable GptWakeupConfiguration container"/>
                        </a:da>      
                      </v:var>

                      <!-- @implements DGPT01009 -->
                      <v:var name="GptNotification" type="FUNCTION-NAME">
                        <a:da name="TOOLTIP" value="Function pointer to callback function. The field is editable only,If the switch GptEnableDisableNotificationApi is true."/>
                        <a:a name="DESC" 
                             value="EN: Function pointer to callback function(for non-wakeup notification). Note:The field is editable only,If the switch GptEnableDisableNotificationApi is true."/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:6088f0b6-b963-42dd-aba2-130d2859936a"/>
                        <a:da name="DEFAULT" value="NULL_PTR"/>
                        <a:da name="INVALID" type="XPath"> 
                          <a:tst expr="((.='NULL') or (.='Null') or (.='false') or (.='FALSE') or (.='null') or                 
                                       (.='null_ptr') or (.='Null_Ptr'))" 
                                       true="Invalid name of the GptNotification. Must be valid C function name, NULL_PTR.     
                          "/>                                                     
                          <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or     
                                       normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or     
                                       text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" 
                                 false="Invalid name of the GptNotification. Must be valid C function name, NULL_PTR,     
                          ."/>                    
                        </a:da>        
                        <a:da name="EDITABLE" type="Bound">
                          <a:tst expr="../../../../../GptConfigurationOfOptApiServices/GptEnableDisableNotificationApi"/>
                        </a:da>
                      </v:var>

                      <!-- @implements DGPT01011 -->
                      <v:ref name="GptChannelClkSrcRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN:<html>
                          Reference to the GptClockReferencePoint from which the channel clock is derived.
                               </html>]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" value="ECUC:95a4461d-0183-49dd-97e8-7f89a62db67f"/>
                        <a:da name="ENABLE" type="XPath" expr="contains(node:fallback(../GptHwChannel,'RTC'),'RTC') = false()"/>
                        <a:da name="REF"
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Gpt/GptDriverConfiguration/GptClockReferencePoint"/>
                      </v:ref>

                      <!-- @implements DGPT01012 -->
                      <v:ctr name="GptWakeupConfiguration" type="IDENTIFIABLE">
                        <a:a name="DESC"
                             value="EN: This container defines the wakeup source codes reported to Ecu State Manager."/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="UUID" value="ECUC:d1127c04-9219-4642-b995-a3b4da656c5f"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="(../../../../../GptDriverConfiguration/GptReportWakeupSource = 'false' and num:i(num:i(count(../GptWakeupConfiguration/*))) != '0') " 
                                 true="The switch GptReportWakeupSource is false,set it to true. "/>
                          <a:tst expr="(../GptEnableWakeup  = 'false' and num:i(num:i(count(../GptWakeupConfiguration/*))) != '0') " 
                                 true="The switch GptEnableWakeup is false,set it to true. "/>
                          <a:tst expr="(contains(node:fallback(../GptHwChannel,'STM'),'STM') = 'true') " 
                                 true="The STM channels have not wakeup capability."/>
                        </a:da>

                        <!-- @implements DGPT01013 -->
                        <v:ref name="GptWakeupSourceRef" 
                               type="SYMBOLIC-NAME-REFERENCE">
                          <a:a name="DESC">
                            <a:v>EN: In case the wakeup-capability is true this value is transmitted to the Ecu State Manager. Implementation Type: reference to EcuM_WakeupSourceType
                            </a:v>
                          </a:a>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="(../GptWakeupSourceRef  = '')" true="No EcuMWakeup Source is selected. "/>
                          </a:da>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" value="ECUC:47052fca-6ee6-4872-95c0-2d24125cb8f9"/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMCommonConfiguration/EcuMWakeupSource"/>
                        </v:ref>
                        
                        <v:var name="GptDisableEcumWakeupSourceNotification" type="BOOLEAN">
                            <a:a name="DESC"><a:v><![CDATA[
                          <html>
                            Select to enable/ disable the notification to EcuM by calling EcuM_CheckWakeup().<br>
                             True: The notification to EcuM will not be called <br>
                             False : The notification to EcuM will be called <br>
                             <h1>Note</h1>This is an Implementation Specific Parameter.<br>
                          </html>
                          ]]></a:v></a:a>        
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>                          
                          <a:a name="ORIGIN" value="Freescale"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:e846c4e9-290b-49fe-a2b5-e1c96b358d64"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>                      
                      </v:ctr>
                    </v:ctr>
                  </v:lst>
                </v:ctr>
              </v:lst>

              <!-- @implements DGPT01002 -->
              <v:ctr name="GptConfigurationOfOptApiServices" 
                     type="IDENTIFIABLE">
                <a:a name="DESC" 
                     value="EN: This container contains all configuration switches for configuring optional API services of the GPT driver"/>
                <a:a name="UUID" value="ECUC:88c56883-942a-422c-b271-cbc59aaf1214"/>

                <!-- @implements DGPT01019 -->
                <v:var name="GptDeinitApi" type="BOOLEAN">
                  <a:a name="DESC" 
                       value="EN: Adds / removes the service Gpt_DeInit() from the code."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:12bd8769-2902-48ad-81db-441c9d9bb403"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>

                <!-- @implements DGPT01016 -->
                <v:var name="GptEnableDisableNotificationApi" type="BOOLEAN">
                  <a:a name="DESC" 
                       value="EN: Adds / removes the services Gpt_EnableNotification() and Gpt_DisableNotification from the code."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:abdd132d-e0d8-44d0-ab10-0e1d1896b77d"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>

                <!-- @implements DGPT01020 -->
                <v:var name="GptTimeElapsedApi" type="BOOLEAN">
                  <a:a name="DESC" 
                       value="EN: Adds / removes the service Gpt_GetTimeElapsed() from the code"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:5d07bc87-8830-4789-a004-ae19ffa42ca3"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>

                <!-- @implements DGPT01021 -->
                <v:var name="GptTimeRemainingApi" type="BOOLEAN">
                  <a:a name="DESC" 
                       value="EN: Adds / removes the service Gpt_GetTimeRemaining() from the code."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:3e7af77d-ce25-4f2c-b601-861ac9d07a61"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>

                <!-- @implements DGPT01018 -->
                <v:var name="GptVersionInfoApi" type="BOOLEAN">
                  <a:a name="DESC" 
                       value="EN: Adds / removes the service Gpt_GetVersionInfo() from the code."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:104101e6-f041-4c6a-9fc3-132f4c9f35ae"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>

                <!-- @implements DGPT01017 -->
                <v:var name="GptWakeupFunctionalityApi" type="BOOLEAN">
                  <a:a name="DESC" 
                       value="EN: Adds / removes the services Gpt_SetMode(), Gpt_EnableWakeup() Gpt_DisableWakeup() and Gpt_Cbk_CheckWakeup() from the code."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:1d2800ce-50e3-4368-b29d-4b11926955cc"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
              </v:ctr>

              <!-- @implements DGPT01005 -->
              <v:ctr name="GptDriverConfiguration" type="IDENTIFIABLE">
                <a:a name="DESC" 
                     value="EN: This container contains the module-wide configuration (parameters) of the GPT Driver"/>
                <a:a name="UUID" value="ECUC:66cd96f7-efff-4070-b56f-789d2e14f391"/>

                <!-- @implements DGPT01004 -->
                <v:var name="GptDevErrorDetect" type="BOOLEAN">
                  <a:a name="DESC" 
                       value="EN: Enables/Disables development error detection"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:9b74eba8-5eed-45f6-80d3-361701402a6b"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>

                <!-- @implements DGPT01027 -->
                <v:var name="GptReportWakeupSource" type="BOOLEAN">
                  <a:a name="DESC" 
                       value="EN: Enables/Disables wakeup source reporting"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="UUID" value="ECUC:c6046b0a-7b9e-43f1-a027-35a2c7f8fb70"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>

                <!-- @implements DGPT01006 -->
                <v:lst name="GptClockReferencePoint" type="MAP">
                  <a:da name="MIN" value="1"/>
                  <!-- @implements DGPT01028 -->
                  <v:ctr name="GptClockReferencePoint" type="IDENTIFIABLE">
                    <a:a name="DESC"> 
                      <a:v><![CDATA[EN:<html>
                         value="EN: This container contains a parameter, which represents a reference to a container of the type McuClockReferencePoint (defined in module MCU)."/>
                        </html>]]>
                      </a:v>
                    </a:a>
                    <a:a name="UUID" value="ECUC:66901d17-8c9d-43fd-ade6-f945b3bf1f12"/>
                    <v:ref name="GptClockReference" type="REFERENCE">
                      <a:a name="DESC" 
                           value="EN: Reference to a container of the type McuClockReferencePoint, to select an input clock."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" value="ECUC:e8934b17-794e-4620-a944-57eeeb4c83da"/>
                      <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcu/McuModuleConfiguration/McuClockSettingConfig/McuClockReferencePoint"/>
                    </v:ref>
                  </v:ctr>
                </v:lst>
              </v:ctr>

              <!-- @implements DGPT01030 -->
              <v:ctr name="GptNonAUTOSAR" type="IDENTIFIABLE">
                <a:a name="DESC">
                <a:v><![CDATA[EN: <html> 
                    Enabling the settings of this section will configure the driver in a mode not compliant with AUTOSAR requirements. 
                    </html> ]]>
                </a:v>
                </a:a>
                <a:a name="UUID" value="ECUC:fee9a632-387f-4399-8dba-a2c28ded4789"/>
                <!-- @implements DGPT01031 -->
                <v:var name="GptEnableDualClockMode" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v><![CDATA[EN:<html>
                      Enables prescaler settings at mode transition.<br>true: Enabled.<br>false: Disabled.<br>
                      <h1>Note</h1> This feature is not required by Autosar.
                      </html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:ab26f83e-dc94-4596-a3c1-3834dd2297ab"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
              <!-- @implements DGPT01033 -->
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v><![CDATA[EN: 
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  ]]></a:v>
                </a:a>
                <a:a name="UUID" value="ECUC:d22de3c4-6f47-49cf-b74a-a5743fe1fa97"/>
                <v:var name="ArReleaseMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                      <a:v><![CDATA[EN: 
                      Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                      ]]></a:v>
                  </a:a>              
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:2149d1b0-13b2-4d9e-815a-cb5f460d580d"/>
                  <a:da name="DEFAULT" value="4"/>                       
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&gt;=4"/>
                    <a:tst expr="&lt;=4"/>
                  </a:da>                    
                </v:var>
                <v:var name="ArReleaseMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                      <a:v><![CDATA[EN: 
                      Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                      ]]></a:v>
                  </a:a>              
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:417b8616-056a-43c1-891b-7d7da9707c6f"/>
                  <a:da name="DEFAULT" value="0"/>                       
                  <a:da name="INVALID" type="Range">
                      <a:tst expr="&gt;=0"/>
                      <a:tst expr="&lt;=0"/>
                  </a:da>                    
                </v:var>
                <v:var name="ArReleaseRevisionVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                      <a:v><![CDATA[EN: 
                      Revision version number of AUTOSAR specification on which the appropriate implementation is based on.
                      ]]></a:v>
                  </a:a>              
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:0ebc17ea-79c4-4b48-b9fb-39c77aa531ae"/>
                  <a:da name="DEFAULT" value="3"/>                       
                  <a:da name="INVALID" type="Range">
                      <a:tst expr="&gt;=3"/>
                      <a:tst expr="&lt;=3"/>
                  </a:da>                    
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                      <a:v><![CDATA[EN: 
                      Module ID of this module from Module List.
                      ]]></a:v>
                  </a:a>              
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:370a6ba0-1959-4b5d-b692-433828f1084c"/>
                  <a:da name="DEFAULT" value="100"/>                                         
                  <a:da name="INVALID" type="Range">
                      <a:tst expr="&gt;=100"/>
                      <a:tst expr="&lt;=100"/>
                  </a:da>                    
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                      <a:v><![CDATA[EN: 
                      Major version number of the vendor specific implementation of the module. The numbering is vendor specific.
                      ]]></a:v>
                  </a:a>              
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:761b3b4d-4b48-4965-a9a5-81b28f03b70b"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="INVALID" type="Range">
                      <a:tst expr="&gt;=1"/>
                      <a:tst expr="&lt;=1"/>
                  </a:da>                    
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v><![CDATA[EN: 
                    Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    ]]></a:v>
                  </a:a>              
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:67a32e84-1dae-4580-8acf-d90324096dde"/>
                  <a:da name="DEFAULT" value="0"/>                     
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&gt;=0"/>
                    <a:tst expr="&lt;=0"/>
                  </a:da>                    
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v><![CDATA[EN: 
                    Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    ]]></a:v>
                  </a:a>              
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:88267334-cc88-49f7-a2b3-f9d816a2cc3d"/>
                  <a:da name="DEFAULT" value="1"/>                                         
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=1"/>
                  </a:da>                    
                </v:var>
                <v:var name="VendorApiInfix" type="STRING_LABEL">
                  <a:a name="DESC">
                      <a:v><![CDATA[EN: 
                      In driver modules which can be instantiated several times on a single ECU, BSW00347 requires that the name of APIs is extended by the VendorId and a vendor specific name. 
                      This parameter is used to specify the vendor specific name. In total, the implementation specific name is generated as follows:
                      &lt;ModuleName&gt;_&gt;VendorId&gt;_&lt;VendorApiInfix&gt;&lt;Api name from SWS&gt;.
                      E.g.  assuming that the VendorId of the implementor is 123 and the implementer chose a VendorApiInfix of &quot;v11r456&quot; a api name Can_Write defined in the SWS will translate to Can_123_v11r456Write. 
                      This parameter is mandatory for all modules with upper multiplicity &gt; 1. It shall not be used for modules with upper multiplicity =1.]]></a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:fdd03bb1-962e-485d-935f-83cbb9ef05be"/>
                  <a:da name="DEFAULT" value=""/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:da name="ENABLE" value="false"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                    <a:a name="DESC">
                        <a:v><![CDATA[EN: 
                          Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list.
                        ]]></a:v>
                    </a:a>              
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      <icc:v class="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Freescale"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:f434ae20-0d5c-41cd-8a45-a845504f1526"/>
                    <a:da name="DEFAULT" value="43"/>
                    <a:da name="INVALID" type="Range">
                        <a:tst expr="&gt;=43"/>
                        <a:tst expr="&lt;=43"/>
                    </a:da>                    
                </v:var>
              </v:ctr>
              <d:ref type="REFINED_MODULE_DEF" value="ASPath:/AUTOSAR/EcucDefs/Gpt"/>
            </v:ctr>
          </d:chc>
          <d:chc name="Gpt_EcuParameterDefinition" 
                 type="AR-ELEMENT" value="ECU_PARAMETER_DEFINITION">
            <d:ctr type="AR-ELEMENT">
              <a:a name="UUID" value="ECUC:4679b747-754f-4922-b66b-3091cd7db9e7"/>
              <a:a name="DEF" 
                   value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
              <d:lst name="MODULE_REF">
                <d:ref type="MODULE_REF" value="ASPath:/TS_T2D13M10I1R0/Gpt"/>
              </d:lst>
            </d:ctr>
          </d:chc>
          <d:chc name="Gpt_ModuleDescription" 
                 type="AR-ELEMENT" value="BSW_MODULE_DESCRIPTION">
            <d:ctr type="AR-ELEMENT">
              <a:a name="UUID" value="ECUC:b9b0f29c-bf6d-42d6-b1f8-684e6f507274"/>
              <a:a name="DEF" 
                   value="ASPath:/AR_PACKAGE_SCHEMA/BSW_MODULE_DESCRIPTION"/>
              <d:var name="MODULE_ID" type="INTEGER" >
                <a:a name="ENABLE" value="false"/>
                <a:a name="IMPORTER_INFO" value="@DEF"/>
              </d:var>
              <d:ref type="RECOMMENDED_CONFIGURATION" >
                <a:a name="ENABLE" value="false"/>
                <a:a name="IMPORTER_INFO" value="@DEF"/>
              </d:ref>
              <d:ref type="PRE_CONFIGURED_CONF" >
                <a:a name="ENABLE" value="false"/>
                <a:a name="IMPORTER_INFO" value="@DEF"/>
              </d:ref>
              <d:ref type="VENDOR_SPECIFIC_MODULE_DEF" 
                     value="ASPath:/TS_T2D13M10I1R0/Gpt"/>
            </d:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
